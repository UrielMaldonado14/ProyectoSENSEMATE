#include <WiFi.h>
#include <WebServer.h>

// Define los pines utilizados para cada sensor de flexión
const int pulgarPin = 34;    // Pin del sensor de flexión del pulgar
const int indicePin = 35;     // Pin del sensor de flexión del índice
const int medioPin = 32;      // Pin del sensor de flexión del dedo medio
const int anularPin = 33;     // Pin del sensor de flexión del anular
const int meniquePin = 25;    // Pin del sensor de flexión del meñique

// Crea un servidor web en el puerto 80
WebServer server(80);

String cadena = "";
char letra = ' ';

void handleRoot() {
  // Lee los valores analógicos de cada sensor de flexión
  int pulgarVal = analogRead(pulgarPin);
  int indiceVal = analogRead(indicePin);
  int medioVal = analogRead(medioPin);
  int anularVal = analogRead(anularPin);

  // Reconoce la letra correspondiente y realiza la acción específica
  letra = reconocerLetra(pulgarVal, indiceVal, medioVal, anularVal);

  // Agrega la letra reconocida a la cadena
  if (letra != ' ') {
    cadena += letra;
  }

  // Genera la página HTML con los valores de los sensores, la letra reconocida y el botón para borrar
  String html = "<!DOCTYPE html>";
  html += "<html lang=\"es\">";
  html += "<head>";
  html += "<meta charset=\"UTF-8\">";
  html += "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">";
  html += "<title>Sensores de Flexión</title>";
  html += "<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">";
  html += "<style>";
  html += "body { background-color: #031926; color: #ffffff; font-family: Arial, sans-serif; position: relative; margin-top: 0; }"; // Ajuste para eliminar el margen superior
  html += ".container { margin-top: 50px; }";
  html += ".cadena { background-color: #ffffff; padding: 30px; margin-bottom: 30px; color: #000000; border-radius: 15px; }"; // Ajuste del tamaño del recuadro y del color del texto
  html += ".letra { font-size: 36px; font-weight: bold; }"; // Ajuste del tamaño de la letra
  html += ".btn-borrar { background-color: #2CD039; color: #ffffff; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer; transition: background-color 0.3s ease; }";
  html += ".btn-borrar:hover { background-color: #24a82d; }";
  html += "table { width: 100%; border-collapse: collapse; margin-top: 30px; }";
  html += "th, td { border: 1px solid #ffffff; padding: 10px; text-align: center; }";
  html += "th { background-color: #1b4b72; }";
  html += "tr:nth-child(even) { background-color: #0f3c56; }";
  html += ".hand-emoji { font-size: 48px; position: absolute; top: 0; left: 0; margin: 10px; }"; // Ajuste del estilo para el emoji de la mano
  html += "</style>";
  html += "</head>";
  html += "<body>";
  html += "<div class=\"container\">";
  html += "<span class=\"hand-emoji\">✋</span>"; // Emoji de la mano
  html += "<h1 class=\"text-center\">Cadena de Letras</h1>";
  html += "<div class=\"cadena\">";
  html += "<h2 class=\"text-center letra\">" + cadena + "</h2>";
  html += "</div>";
  html += "<div class=\"text-center\">";
  html += "<button class=\"btn btn-borrar\" onclick=\"borrarCadena()\">Borrar</button>";
  html += "</div>";
  html += "<br>";
  html += "<br>";
  html += "<br>";
  html += "<br>";
  html += "<br>";
  html += "<h2 class=\"text-center\">Letra Reconocida: <span class=\"letra\">" + String(letra) + "</span></h2>";
  html += "<br>";
  html += "<br>";
  html += "<br>";
  html += "<br>";
  html += "<br>";
  html += "<br>";
  html += "<br>";
  html += "<table class=\"table\">";
  html += "<thead class=\"thead-light\">";
  html += "<tr><th>Sensor</th><th>Valor</th></tr>";
  html += "</thead>";
  html += "<tbody>";
html += "<tr><td style=\"color: #f0f0f0;\">Pulgar</td><td style=\"color: #f0f0f0;\">" + String(pulgarVal) + "</td></tr>"; 
html += "<tr><td style=\"color: #f0f0f0;\">Índice</td><td style=\"color: #f0f0f0;\">" + String(indiceVal) + "</td></tr>"; 
html += "<tr><td style=\"color: #f0f0f0;\">Medio</td><td style=\"color: #f0f0f0;\">" + String(medioVal) + "</td></tr>"; 
html += "<tr><td style=\"color: #f0f0f0;\">Anular</td><td style=\"color: #f0f0f0;\">" + String(anularVal) + "</td></tr>"; 
html += "</tbody>";
  html += "</tbody>";
  html += "</table>";
  html += "</div>";
  html += "<script>";
  html += "function borrarCadena() {";
  html += "  fetch('/borrar')";
  html += "  .then(response => {";
  html += "    console.log(response);";
  html += "    window.location.reload();";
  html += "  });";
  html += "}";
  html += "</script>";
  html += "</body>";
  html += "</html>";

  // Envía la página HTML al cliente
  server.send(200, "text/html", html);
}

void handleBorrar() {
  // Borra la cadena de letras
  cadena = "";
  server.send(200, "text/plain", "Cadena de letras borrada.");
}

void setup() {
  // Inicializa el puerto serie
  Serial.begin(9600);

  // Inicializa los pines de los sensores de flexión
  pinMode(pulgarPin, INPUT);
  pinMode(indicePin, INPUT);
  pinMode(medioPin, INPUT);
  pinMode(anularPin, INPUT);
  pinMode(meniquePin, INPUT);

  // Conéctate a la red Wi-Fi
  WiFi.begin("Mega_2.4G_7C86", "RSSYAPNT");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Conectando a la red Wi-Fi...");
  }
  Serial.println("Conexión Wi-Fi establecida");

  // Imprime la dirección IP asignada al dispositivo  
  Serial.print("Dirección IP: ");
  Serial.println(WiFi.localIP());

  // Registra los manejadores de ruta
  server.on("/", handleRoot);
  server.on("/borrar", handleBorrar);

  // Inicia el servidor web
  server.begin();
  Serial.println("Servidor web iniciado");
}

void loop() {
  // Maneja las solicitudes del cliente
  server.handleClient();
}

// Función para reconocer la letra según la posición de los dedos
char reconocerLetra(int pulgar, int indice, int medio, int anular) {
  // Determina la letra según la posición de los dedos

  // A
  if (pulgar <= 100 && indice >= 1000 && medio >= 1000 && anular >= 1000) {
    Serial.print("A");
    delay(10);
    return 'A';
  }

  // H
  if (pulgar >= 1000 && indice < 500 && medio < 700 && anular >= 1000 ) {
    Serial.print("H");
    delay(10);
    return 'H';
  }  

  // L
  if (pulgar < 200 && indice < 200 && medio >= 1100 && anular >= 1100 ) {
    Serial.print("L");
    delay(10);
    return 'L';
  }

  // O     
  if (pulgar >= 1100 && indice >= 1100 && medio >= 1100 && anular >= 1100 ) {
    Serial.print("O");
    delay(10);
    return 'O';
  }


    // B     
  if (pulgar >= 1100 && indice < 700 && medio < 700 && anular < 700 ) {
    Serial.print("B");
    delay(10);
    return 'B';
  }

    // D     
  if (pulgar >= 1100 && indice < 700 && medio >= 1100 && anular >= 1100) {
    Serial.print("D");
    delay(10);
    return 'D';
  }

      // F     
  if (pulgar >= 1100 && indice >= 1100 && medio < 700 && anular < 700) {
    Serial.print("F");
    delay(10);
    return 'F';
  }



  
  return ' ';
}